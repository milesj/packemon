// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`getBabelInputConfig() > can mutate config 1`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [
    "babel-plugin-example",
  ],
  "presets": [],
  "rootMode": "upward",
}
`;

exports[`getBabelInputConfig() > doesnt include typescript decorators if \`typescript\` feature flag is false 1`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [],
  "presets": [],
}
`;

exports[`getBabelInputConfig() > includes flow preset if \`flow\` feature flag is true 1`] = `
[
  [
    "@babel/preset-flow",
    {
      "allowDeclareFields": true,
    },
  ],
]
`;

exports[`getBabelInputConfig() > includes no plugins or presets by default 1`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [],
  "presets": [],
}
`;

exports[`getBabelInputConfig() > includes react preset if \`react\` feature flag is true 1`] = `
[
  [
    "@babel/preset-react",
    {
      "runtime": "classic",
      "throwIfNamespace": true,
      "useBuiltIns": true,
    },
  ],
]
`;

exports[`getBabelInputConfig() > includes react preset if \`react\` feature flag is true 2`] = `
[
  [
    "@babel/preset-react",
    {
      "runtime": "automatic",
      "throwIfNamespace": true,
      "useBuiltIns": true,
    },
  ],
]
`;

exports[`getBabelInputConfig() > includes solid preset if \`solid\` feature flag is true 1`] = `
[
  "babel-preset-solid",
]
`;

exports[`getBabelInputConfig() > includes typescript decorators if \`typescript\` and \`decorators\` feature flag is true 1`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [
    [
      "@babel/plugin-transform-typescript",
      {
        "allowDeclareFields": true,
        "onlyRemoveTypeImports": false,
        "optimizeConstEnums": true,
      },
    ],
    [
      "@babel/plugin-proposal-decorators",
      {
        "legacy": true,
      },
    ],
    [
      "@babel/plugin-transform-class-properties",
      {
        "loose": true,
      },
    ],
    [
      "@babel/plugin-transform-private-methods",
      {
        "loose": true,
      },
    ],
    [
      "@babel/plugin-transform-private-property-in-object",
      {
        "loose": true,
      },
    ],
  ],
  "presets": [
    [
      "@babel/preset-typescript",
      {
        "allowDeclareFields": true,
        "onlyRemoveTypeImports": false,
        "optimizeConstEnums": true,
      },
    ],
  ],
}
`;

exports[`getBabelInputConfig() > includes typescript preset if \`typescript\` feature flag is true 1`] = `
[
  [
    "@babel/preset-typescript",
    {
      "allowDeclareFields": true,
      "onlyRemoveTypeImports": false,
      "optimizeConstEnums": true,
    },
  ],
]
`;

exports[`getBabelInputConfig() > supports private properties with decorators if dep exists 1`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [
    [
      "@babel/plugin-transform-typescript",
      {
        "allowDeclareFields": true,
        "onlyRemoveTypeImports": false,
        "optimizeConstEnums": true,
      },
    ],
    [
      "@babel/plugin-proposal-decorators",
      {
        "legacy": true,
      },
    ],
    [
      "@babel/plugin-transform-class-properties",
      {
        "loose": true,
      },
    ],
    [
      "@babel/plugin-transform-private-methods",
      {
        "loose": true,
      },
    ],
    [
      "@babel/plugin-transform-private-property-in-object",
      {
        "loose": true,
      },
    ],
  ],
  "presets": [
    [
      "@babel/preset-typescript",
      {
        "allowDeclareFields": true,
        "onlyRemoveTypeImports": false,
        "optimizeConstEnums": true,
      },
    ],
  ],
}
`;

exports[`getBabelOutputConfig() > can mutate config 1`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [
    [
      "@babel/plugin-transform-destructuring",
      {
        "useBuiltIns": true,
      },
    ],
    [
      "@babel/plugin-transform-object-rest-spread",
      {
        "useBuiltIns": true,
      },
    ],
    "babel-plugin-conditional-invariant",
    "babel-plugin-env-constants",
    "babel-plugin-example",
  ],
  "presets": [
    [
      "@babel/preset-env",
      {
        "bugfixes": true,
        "exclude": [
          "@babel/plugin-transform-regenerator",
          "@babel/plugin-transform-async-to-generator",
          "@babel/plugin-proposal-dynamic-import",
        ],
        "loose": false,
        "modules": "cjs",
        "shippedProposals": true,
        "spec": true,
        "targets": {
          "browsers": [
            "defaults",
            "not IE 11",
          ],
        },
        "useBuiltIns": false,
      },
    ],
  ],
  "rootMode": "upward",
}
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + esm + current 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": false,
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        ">=1%",
        "not dead",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + esm + experimental 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": false,
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        "last 2 chrome versions",
        "last 2 firefox versions",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + esm + legacy 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": false,
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        ">=0.10%",
        "not IE 11",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + esm + stable 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": false,
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        "defaults",
        "not IE 11",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + lib + current 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        ">=1%",
        "not dead",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + lib + experimental 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        "last 2 chrome versions",
        "last 2 firefox versions",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + lib + legacy 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        ">=0.10%",
        "not IE 11",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + lib + stable 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        "defaults",
        "not IE 11",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + umd + current 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
    ],
    "loose": false,
    "modules": "umd",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        ">=1%",
        "not dead",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + umd + experimental 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
    ],
    "loose": false,
    "modules": "umd",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        "last 2 chrome versions",
        "last 2 firefox versions",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + umd + legacy 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
    ],
    "loose": false,
    "modules": "umd",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        ">=0.10%",
        "not IE 11",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: browser + umd + stable 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
    ],
    "loose": false,
    "modules": "umd",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": [
        "defaults",
        "not IE 11",
      ],
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: native + lib + current 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": "iOS 16",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: native + lib + experimental 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": "iOS 17",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: native + lib + legacy 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": "iOS 14",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: native + lib + stable 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "browsers": "iOS 15",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + cjs + current 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "20.10.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + cjs + experimental 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "21.6.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + cjs + legacy 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "16.12.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + cjs + stable 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "18.12.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + lib + current 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "20.10.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + lib + experimental 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "21.6.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + lib + legacy 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "16.12.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + lib + stable 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": "cjs",
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "18.12.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + mjs + current 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": false,
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "20.10.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + mjs + experimental 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": false,
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "21.6.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + mjs + legacy 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": false,
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "16.12.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > handles preset-env: node + mjs + stable 1`] = `
[
  "@babel/preset-env",
  {
    "bugfixes": true,
    "exclude": [
      "@babel/plugin-transform-regenerator",
      "@babel/plugin-transform-async-to-generator",
      "@babel/plugin-proposal-dynamic-import",
    ],
    "loose": false,
    "modules": false,
    "shippedProposals": true,
    "spec": true,
    "targets": {
      "node": "18.12.0",
    },
    "useBuiltIns": false,
  },
]
`;

exports[`getBabelOutputConfig() > transforms async/await to promises when \`browser\` or \`native\` 1`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [
    [
      "@babel/plugin-transform-destructuring",
      {
        "useBuiltIns": true,
      },
    ],
    [
      "@babel/plugin-transform-object-rest-spread",
      {
        "useBuiltIns": true,
      },
    ],
    "babel-plugin-conditional-invariant",
    "babel-plugin-env-constants",
  ],
  "presets": [
    [
      "@babel/preset-env",
      {
        "bugfixes": true,
        "exclude": [
          "@babel/plugin-transform-regenerator",
          "@babel/plugin-transform-async-to-generator",
          "@babel/plugin-proposal-dynamic-import",
        ],
        "loose": false,
        "modules": "cjs",
        "shippedProposals": true,
        "spec": true,
        "targets": {
          "browsers": [
            "defaults",
            "not IE 11",
          ],
        },
        "useBuiltIns": false,
      },
    ],
  ],
}
`;

exports[`getBabelOutputConfig() > transforms async/await to promises when \`browser\` or \`native\` 2`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [
    [
      "@babel/plugin-transform-destructuring",
      {
        "useBuiltIns": true,
      },
    ],
    [
      "@babel/plugin-transform-object-rest-spread",
      {
        "useBuiltIns": true,
      },
    ],
    "babel-plugin-conditional-invariant",
    "babel-plugin-env-constants",
  ],
  "presets": [
    [
      "@babel/preset-env",
      {
        "bugfixes": true,
        "exclude": [
          "@babel/plugin-transform-regenerator",
          "@babel/plugin-transform-async-to-generator",
          "@babel/plugin-proposal-dynamic-import",
        ],
        "loose": false,
        "modules": "cjs",
        "shippedProposals": true,
        "spec": true,
        "targets": {
          "browsers": "iOS 17",
        },
        "useBuiltIns": false,
      },
    ],
  ],
}
`;

exports[`getBabelOutputConfig() > uses built-in destructuring and object spread when \`current\` or \`experimental\` 1`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [
    [
      "@babel/plugin-transform-destructuring",
      {
        "useBuiltIns": true,
      },
    ],
    [
      "@babel/plugin-transform-object-rest-spread",
      {
        "useBuiltIns": true,
      },
    ],
    [
      "babel-plugin-cjs-esm-interop",
      {
        "format": "cjs",
      },
    ],
    "babel-plugin-conditional-invariant",
    "babel-plugin-env-constants",
  ],
  "presets": [
    [
      "@babel/preset-env",
      {
        "bugfixes": true,
        "exclude": [
          "@babel/plugin-transform-regenerator",
          "@babel/plugin-transform-async-to-generator",
          "@babel/plugin-proposal-dynamic-import",
        ],
        "loose": false,
        "modules": "cjs",
        "shippedProposals": true,
        "spec": true,
        "targets": {
          "node": "20.10.0",
        },
        "useBuiltIns": false,
      },
    ],
  ],
}
`;

exports[`getBabelOutputConfig() > uses built-in destructuring and object spread when \`current\` or \`experimental\` 2`] = `
{
  "babelrc": false,
  "caller": {
    "name": "packemon",
  },
  "comments": true,
  "configFile": false,
  "parserOpts": {
    "sourceType": "unambiguous",
    "strictMode": undefined,
  },
  "plugins": [
    [
      "@babel/plugin-transform-destructuring",
      {
        "useBuiltIns": true,
      },
    ],
    [
      "@babel/plugin-transform-object-rest-spread",
      {
        "useBuiltIns": true,
      },
    ],
    [
      "babel-plugin-cjs-esm-interop",
      {
        "format": "cjs",
      },
    ],
    "babel-plugin-conditional-invariant",
    "babel-plugin-env-constants",
  ],
  "presets": [
    [
      "@babel/preset-env",
      {
        "bugfixes": true,
        "exclude": [
          "@babel/plugin-transform-regenerator",
          "@babel/plugin-transform-async-to-generator",
          "@babel/plugin-proposal-dynamic-import",
        ],
        "loose": false,
        "modules": "cjs",
        "shippedProposals": true,
        "spec": true,
        "targets": {
          "node": "21.6.0",
        },
        "useBuiltIns": false,
      },
    ],
  ],
}
`;
