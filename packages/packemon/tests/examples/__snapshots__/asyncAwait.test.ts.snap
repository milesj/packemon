// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Async/await babel transforms example test case: browser-current-esm 1`] = `
[
  "esm/index-browser-current-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: current, Format: esm

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-browser-current-esm.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-current-lib 1`] = `
[
  "lib/index-browser-current-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: current, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-browser-current-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-current-umd 1`] = `
[
  "umd/index-browser-current-umd.js",
  "(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.examples = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.run = run;
  _exports.wait = wait;
  // Bundled with Packemon: https://packemon.dev
  // Platform: browser, Support: current, Format: umd

  async function wait() {
    return new Promise(resolve => {
      setTimeout(resolve, 100);
    });
  }
  async function run() {
    try {
      await wait();
    } catch {
      throw new Error('Fail');
    }
  }
});
//# sourceMappingURL=index-browser-current-umd.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-experimental-esm 1`] = `
[
  "esm/index-browser-experimental-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: experimental, Format: esm

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-browser-experimental-esm.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-experimental-lib 1`] = `
[
  "lib/index-browser-experimental-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: experimental, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-browser-experimental-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-experimental-umd 1`] = `
[
  "umd/index-browser-experimental-umd.js",
  "(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.examples = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.run = run;
  _exports.wait = wait;
  // Bundled with Packemon: https://packemon.dev
  // Platform: browser, Support: experimental, Format: umd

  async function wait() {
    return new Promise(resolve => {
      setTimeout(resolve, 100);
    });
  }
  async function run() {
    try {
      await wait();
    } catch {
      throw new Error('Fail');
    }
  }
});
//# sourceMappingURL=index-browser-experimental-umd.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-legacy-esm 1`] = `
[
  "esm/index-browser-legacy-esm.js",
  "function _newArrowCheck(innerThis, boundThis) { if (innerThis !== boundThis) { throw new TypeError("Cannot instantiate an arrow function"); } }
// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: legacy, Format: esm

async function wait() {
  var _this = this;
  return new Promise(function (resolve) {
    _newArrowCheck(this, _this);
    setTimeout(resolve, 100);
  }.bind(this));
}
async function run() {
  try {
    await wait();
  } catch (_unused) {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-browser-legacy-esm.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-legacy-lib 1`] = `
[
  "lib/index-browser-legacy-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: legacy, Format: lib

'use strict';

function _newArrowCheck(innerThis, boundThis) { if (innerThis !== boundThis) { throw new TypeError("Cannot instantiate an arrow function"); } }
async function wait() {
  var _this = this;
  return new Promise(function (resolve) {
    _newArrowCheck(this, _this);
    setTimeout(resolve, 100);
  }.bind(this));
}
async function run() {
  try {
    await wait();
  } catch (_unused) {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-browser-legacy-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-legacy-umd 1`] = `
[
  "umd/index-browser-legacy-umd.js",
  "(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.examples = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.run = run;
  _exports.wait = wait;
  function _newArrowCheck(innerThis, boundThis) { if (innerThis !== boundThis) { throw new TypeError("Cannot instantiate an arrow function"); } }
  // Bundled with Packemon: https://packemon.dev
  // Platform: browser, Support: legacy, Format: umd

  async function wait() {
    var _this = this;
    return new Promise(function (resolve) {
      _newArrowCheck(this, _this);
      setTimeout(resolve, 100);
    }.bind(this));
  }
  async function run() {
    try {
      await wait();
    } catch (_unused) {
      throw new Error('Fail');
    }
  }
});
//# sourceMappingURL=index-browser-legacy-umd.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-stable-esm 1`] = `
[
  "esm/index-browser-stable-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: stable, Format: esm

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-browser-stable-esm.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-stable-lib 1`] = `
[
  "lib/index-browser-stable-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: stable, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-browser-stable-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: browser-stable-umd 1`] = `
[
  "umd/index-browser-stable-umd.js",
  "(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports);
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports);
    global.examples = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.run = run;
  _exports.wait = wait;
  // Bundled with Packemon: https://packemon.dev
  // Platform: browser, Support: stable, Format: umd

  async function wait() {
    return new Promise(resolve => {
      setTimeout(resolve, 100);
    });
  }
  async function run() {
    try {
      await wait();
    } catch {
      throw new Error('Fail');
    }
  }
});
//# sourceMappingURL=index-browser-stable-umd.js.map
",
]
`;

exports[`Async/await babel transforms example test case: electron-current-esm 1`] = `
[
  "esm/index-electron-current-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: current, Format: esm

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-electron-current-esm.js.map
",
]
`;

exports[`Async/await babel transforms example test case: electron-current-lib 1`] = `
[
  "lib/index-electron-current-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: current, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-electron-current-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: electron-experimental-esm 1`] = `
[
  "esm/index-electron-experimental-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: experimental, Format: esm

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-electron-experimental-esm.js.map
",
]
`;

exports[`Async/await babel transforms example test case: electron-experimental-lib 1`] = `
[
  "lib/index-electron-experimental-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: experimental, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-electron-experimental-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: electron-legacy-esm 1`] = `
[
  "esm/index-electron-legacy-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: legacy, Format: esm

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-electron-legacy-esm.js.map
",
]
`;

exports[`Async/await babel transforms example test case: electron-legacy-lib 1`] = `
[
  "lib/index-electron-legacy-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: legacy, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-electron-legacy-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: electron-stable-esm 1`] = `
[
  "esm/index-electron-stable-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: stable, Format: esm

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-electron-stable-esm.js.map
",
]
`;

exports[`Async/await babel transforms example test case: electron-stable-lib 1`] = `
[
  "lib/index-electron-stable-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: stable, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-electron-stable-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: native-current-lib 1`] = `
[
  "lib/index-native-current-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: native, Support: current, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-native-current-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: native-experimental-lib 1`] = `
[
  "lib/index-native-experimental-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: native, Support: experimental, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-native-experimental-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: native-legacy-lib 1`] = `
[
  "lib/index-native-legacy-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: native, Support: legacy, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-native-legacy-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: native-stable-lib 1`] = `
[
  "lib/index-native-stable-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: native, Support: stable, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-native-stable-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: node-current-cjs 1`] = `
[
  "cjs/index-node-current-cjs-wrapper.mjs",
  "// Bundled with Packemon: https://packemon.dev
// This is an MJS wrapper for a sibling CJS file

import data from './index-node-current-cjs.cjs';

export const { run, wait } = data;",
]
`;

exports[`Async/await babel transforms example test case: node-current-cjs 2`] = `
[
  "cjs/index-node-current-cjs.cjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: current, Format: cjs

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-current-cjs.cjs.map
",
]
`;

exports[`Async/await babel transforms example test case: node-current-lib 1`] = `
[
  "lib/index-node-current-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: current, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-current-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: node-current-mjs 1`] = `
[
  "mjs/index-node-current-mjs.mjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: current, Format: mjs

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-node-current-mjs.mjs.map
",
]
`;

exports[`Async/await babel transforms example test case: node-experimental-cjs 1`] = `
[
  "cjs/index-node-experimental-cjs-wrapper.mjs",
  "// Bundled with Packemon: https://packemon.dev
// This is an MJS wrapper for a sibling CJS file

import data from './index-node-experimental-cjs.cjs';

export const { run, wait } = data;",
]
`;

exports[`Async/await babel transforms example test case: node-experimental-cjs 2`] = `
[
  "cjs/index-node-experimental-cjs.cjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: experimental, Format: cjs

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-experimental-cjs.cjs.map
",
]
`;

exports[`Async/await babel transforms example test case: node-experimental-lib 1`] = `
[
  "lib/index-node-experimental-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: experimental, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-experimental-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: node-experimental-mjs 1`] = `
[
  "mjs/index-node-experimental-mjs.mjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: experimental, Format: mjs

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-node-experimental-mjs.mjs.map
",
]
`;

exports[`Async/await babel transforms example test case: node-legacy-cjs 1`] = `
[
  "cjs/index-node-legacy-cjs-wrapper.mjs",
  "// Bundled with Packemon: https://packemon.dev
// This is an MJS wrapper for a sibling CJS file

import data from './index-node-legacy-cjs.cjs';

export const { run, wait } = data;",
]
`;

exports[`Async/await babel transforms example test case: node-legacy-cjs 2`] = `
[
  "cjs/index-node-legacy-cjs.cjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: legacy, Format: cjs

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-legacy-cjs.cjs.map
",
]
`;

exports[`Async/await babel transforms example test case: node-legacy-lib 1`] = `
[
  "lib/index-node-legacy-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: legacy, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-legacy-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: node-legacy-mjs 1`] = `
[
  "mjs/index-node-legacy-mjs.mjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: legacy, Format: mjs

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-node-legacy-mjs.mjs.map
",
]
`;

exports[`Async/await babel transforms example test case: node-stable-cjs 1`] = `
[
  "cjs/index-node-stable-cjs-wrapper.mjs",
  "// Bundled with Packemon: https://packemon.dev
// This is an MJS wrapper for a sibling CJS file

import data from './index-node-stable-cjs.cjs';

export const { run, wait } = data;",
]
`;

exports[`Async/await babel transforms example test case: node-stable-cjs 2`] = `
[
  "cjs/index-node-stable-cjs.cjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: stable, Format: cjs

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-stable-cjs.cjs.map
",
]
`;

exports[`Async/await babel transforms example test case: node-stable-lib 1`] = `
[
  "lib/index-node-stable-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: stable, Format: lib

'use strict';

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-stable-lib.js.map
",
]
`;

exports[`Async/await babel transforms example test case: node-stable-mjs 1`] = `
[
  "mjs/index-node-stable-mjs.mjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: stable, Format: mjs

async function wait() {
  return new Promise(resolve => {
    setTimeout(resolve, 100);
  });
}
async function run() {
  try {
    await wait();
  } catch {
    throw new Error('Fail');
  }
}
export { run, wait };
//# sourceMappingURL=index-node-stable-mjs.mjs.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-current-esm 1`] = `
[
  "esm/index-browser-current-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: current, Format: esm
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-browser-current-esm.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-current-lib 1`] = `
[
  "lib/index-browser-current-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: current, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-browser-current-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-current-umd 1`] = `
[
  "umd/index-browser-current-umd.js",
  "(function(global, factory) {
    if (typeof module === "object" && typeof module.exports === "object") factory(exports);
    else if (typeof define === "function" && define.amd) define([
        "exports"
    ], factory);
    else if (global = typeof globalThis !== "undefined" ? globalThis : global || self) factory(global.examples = {});
})(this, function(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    function _export(target, all) {
        for(var name in all)Object.defineProperty(target, name, {
            enumerable: true,
            get: all[name]
        });
    }
    _export(exports, {
        run: function() {
            return run;
        },
        wait: function() {
            return wait;
        }
    });
    async function wait() {
        return new Promise((resolve)=>{
            setTimeout(resolve, 100);
        });
    }
    async function run() {
        try {
            await wait();
        } catch  {
            throw new Error("Fail");
        }
    }
});
//# sourceMappingURL=index-browser-current-umd.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-experimental-esm 1`] = `
[
  "esm/index-browser-experimental-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: experimental, Format: esm
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-browser-experimental-esm.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-experimental-lib 1`] = `
[
  "lib/index-browser-experimental-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: experimental, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-browser-experimental-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-experimental-umd 1`] = `
[
  "umd/index-browser-experimental-umd.js",
  "(function(global, factory) {
    if (typeof module === "object" && typeof module.exports === "object") factory(exports);
    else if (typeof define === "function" && define.amd) define([
        "exports"
    ], factory);
    else if (global = typeof globalThis !== "undefined" ? globalThis : global || self) factory(global.examples = {});
})(this, function(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    function _export(target, all) {
        for(var name in all)Object.defineProperty(target, name, {
            enumerable: true,
            get: all[name]
        });
    }
    _export(exports, {
        run: function() {
            return run;
        },
        wait: function() {
            return wait;
        }
    });
    async function wait() {
        return new Promise((resolve)=>{
            setTimeout(resolve, 100);
        });
    }
    async function run() {
        try {
            await wait();
        } catch  {
            throw new Error("Fail");
        }
    }
});
//# sourceMappingURL=index-browser-experimental-umd.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-legacy-esm 1`] = `
[
  "esm/index-browser-legacy-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: legacy, Format: esm
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _ts_generator(thisArg, body) {
    var f, y, t, g, _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    };
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
function wait() {
    return _wait.apply(this, arguments);
}
function _wait() {
    _wait = _async_to_generator(function() {
        return _ts_generator(this, function(_state) {
            return [
                2,
                new Promise(function(resolve) {
                    setTimeout(resolve, 100);
                })
            ];
        });
    });
    return _wait.apply(this, arguments);
}
function run() {
    return _run.apply(this, arguments);
}
function _run() {
    _run = _async_to_generator(function() {
        var e;
        return _ts_generator(this, function(_state) {
            switch(_state.label){
                case 0:
                    _state.trys.push([
                        0,
                        2,
                        ,
                        3
                    ]);
                    return [
                        4,
                        wait()
                    ];
                case 1:
                    _state.sent();
                    return [
                        3,
                        3
                    ];
                case 2:
                    e = _state.sent();
                    throw new Error("Fail");
                case 3:
                    return [
                        2
                    ];
            }
        });
    });
    return _run.apply(this, arguments);
}
export { run, wait };
//# sourceMappingURL=index-browser-legacy-esm.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-legacy-lib 1`] = `
[
  "lib/index-browser-legacy-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: legacy, Format: lib
"use strict";
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}
function _async_to_generator(fn) {
    return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
        });
    };
}
function _ts_generator(thisArg, body) {
    var f, y, t, g, _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    };
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(_)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
function wait() {
    return _wait.apply(this, arguments);
}
function _wait() {
    _wait = _async_to_generator(function() {
        return _ts_generator(this, function(_state) {
            return [
                2,
                new Promise(function(resolve) {
                    setTimeout(resolve, 100);
                })
            ];
        });
    });
    return _wait.apply(this, arguments);
}
function run() {
    return _run.apply(this, arguments);
}
function _run() {
    _run = _async_to_generator(function() {
        var e;
        return _ts_generator(this, function(_state) {
            switch(_state.label){
                case 0:
                    _state.trys.push([
                        0,
                        2,
                        ,
                        3
                    ]);
                    return [
                        4,
                        wait()
                    ];
                case 1:
                    _state.sent();
                    return [
                        3,
                        3
                    ];
                case 2:
                    e = _state.sent();
                    throw new Error("Fail");
                case 3:
                    return [
                        2
                    ];
            }
        });
    });
    return _run.apply(this, arguments);
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-browser-legacy-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-legacy-umd 1`] = `
[
  "umd/index-browser-legacy-umd.js",
  "(function(global, factory) {
    if (typeof module === "object" && typeof module.exports === "object") factory(exports);
    else if (typeof define === "function" && define.amd) define([
        "exports"
    ], factory);
    else if (global = typeof globalThis !== "undefined" ? globalThis : global || self) factory(global.examples = {});
})(this, function(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    function _export(target, all) {
        for(var name in all)Object.defineProperty(target, name, {
            enumerable: true,
            get: all[name]
        });
    }
    _export(exports, {
        run: function() {
            return run;
        },
        wait: function() {
            return wait;
        }
    });
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
        try {
            var info = gen[key](arg);
            var value = info.value;
        } catch (error) {
            reject(error);
            return;
        }
        if (info.done) {
            resolve(value);
        } else {
            Promise.resolve(value).then(_next, _throw);
        }
    }
    function _async_to_generator(fn) {
        return function() {
            var self1 = this, args = arguments;
            return new Promise(function(resolve, reject) {
                var gen = fn.apply(self1, args);
                function _next(value) {
                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
                }
                function _throw(err) {
                    asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
                }
                _next(undefined);
            });
        };
    }
    function _ts_generator(thisArg, body) {
        var f, y, t, g, _ = {
            label: 0,
            sent: function() {
                if (t[0] & 1) throw t[1];
                return t[1];
            },
            trys: [],
            ops: []
        };
        return g = {
            next: verb(0),
            "throw": verb(1),
            "return": verb(2)
        }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
            return this;
        }), g;
        function verb(n) {
            return function(v) {
                return step([
                    n,
                    v
                ]);
            };
        }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while(_)try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [
                    op[0] & 2,
                    t.value
                ];
                switch(op[0]){
                    case 0:
                    case 1:
                        t = op;
                        break;
                    case 4:
                        _.label++;
                        return {
                            value: op[1],
                            done: false
                        };
                    case 5:
                        _.label++;
                        y = op[1];
                        op = [
                            0
                        ];
                        continue;
                    case 7:
                        op = _.ops.pop();
                        _.trys.pop();
                        continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                            _ = 0;
                            continue;
                        }
                        if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                            _.label = op[1];
                            break;
                        }
                        if (op[0] === 6 && _.label < t[1]) {
                            _.label = t[1];
                            t = op;
                            break;
                        }
                        if (t && _.label < t[2]) {
                            _.label = t[2];
                            _.ops.push(op);
                            break;
                        }
                        if (t[2]) _.ops.pop();
                        _.trys.pop();
                        continue;
                }
                op = body.call(thisArg, _);
            } catch (e) {
                op = [
                    6,
                    e
                ];
                y = 0;
            } finally{
                f = t = 0;
            }
            if (op[0] & 5) throw op[1];
            return {
                value: op[0] ? op[1] : void 0,
                done: true
            };
        }
    }
    function wait() {
        return _wait.apply(this, arguments);
    }
    function _wait() {
        _wait = _async_to_generator(function() {
            return _ts_generator(this, function(_state) {
                return [
                    2,
                    new Promise(function(resolve) {
                        setTimeout(resolve, 100);
                    })
                ];
            });
        });
        return _wait.apply(this, arguments);
    }
    function run() {
        return _run.apply(this, arguments);
    }
    function _run() {
        _run = _async_to_generator(function() {
            var e;
            return _ts_generator(this, function(_state) {
                switch(_state.label){
                    case 0:
                        _state.trys.push([
                            0,
                            2,
                            ,
                            3
                        ]);
                        return [
                            4,
                            wait()
                        ];
                    case 1:
                        _state.sent();
                        return [
                            3,
                            3
                        ];
                    case 2:
                        e = _state.sent();
                        throw new Error("Fail");
                    case 3:
                        return [
                            2
                        ];
                }
            });
        });
        return _run.apply(this, arguments);
    }
});
//# sourceMappingURL=index-browser-legacy-umd.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-stable-esm 1`] = `
[
  "esm/index-browser-stable-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: stable, Format: esm
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-browser-stable-esm.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-stable-lib 1`] = `
[
  "lib/index-browser-stable-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: browser, Support: stable, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-browser-stable-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: browser-stable-umd 1`] = `
[
  "umd/index-browser-stable-umd.js",
  "(function(global, factory) {
    if (typeof module === "object" && typeof module.exports === "object") factory(exports);
    else if (typeof define === "function" && define.amd) define([
        "exports"
    ], factory);
    else if (global = typeof globalThis !== "undefined" ? globalThis : global || self) factory(global.examples = {});
})(this, function(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    function _export(target, all) {
        for(var name in all)Object.defineProperty(target, name, {
            enumerable: true,
            get: all[name]
        });
    }
    _export(exports, {
        run: function() {
            return run;
        },
        wait: function() {
            return wait;
        }
    });
    async function wait() {
        return new Promise((resolve)=>{
            setTimeout(resolve, 100);
        });
    }
    async function run() {
        try {
            await wait();
        } catch  {
            throw new Error("Fail");
        }
    }
});
//# sourceMappingURL=index-browser-stable-umd.js.map
",
]
`;

exports[`Async/await swc transforms example test case: electron-current-esm 1`] = `
[
  "esm/index-electron-current-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: current, Format: esm
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-electron-current-esm.js.map
",
]
`;

exports[`Async/await swc transforms example test case: electron-current-lib 1`] = `
[
  "lib/index-electron-current-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: current, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-electron-current-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: electron-experimental-esm 1`] = `
[
  "esm/index-electron-experimental-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: experimental, Format: esm
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-electron-experimental-esm.js.map
",
]
`;

exports[`Async/await swc transforms example test case: electron-experimental-lib 1`] = `
[
  "lib/index-electron-experimental-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: experimental, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-electron-experimental-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: electron-legacy-esm 1`] = `
[
  "esm/index-electron-legacy-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: legacy, Format: esm
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-electron-legacy-esm.js.map
",
]
`;

exports[`Async/await swc transforms example test case: electron-legacy-lib 1`] = `
[
  "lib/index-electron-legacy-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: legacy, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-electron-legacy-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: electron-stable-esm 1`] = `
[
  "esm/index-electron-stable-esm.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: stable, Format: esm
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-electron-stable-esm.js.map
",
]
`;

exports[`Async/await swc transforms example test case: electron-stable-lib 1`] = `
[
  "lib/index-electron-stable-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: electron, Support: stable, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-electron-stable-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: native-current-lib 1`] = `
[
  "lib/index-native-current-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: native, Support: current, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-native-current-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: native-experimental-lib 1`] = `
[
  "lib/index-native-experimental-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: native, Support: experimental, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-native-experimental-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: native-legacy-lib 1`] = `
[
  "lib/index-native-legacy-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: native, Support: legacy, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-native-legacy-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: native-stable-lib 1`] = `
[
  "lib/index-native-stable-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: native, Support: stable, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-native-stable-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: node-current-cjs 1`] = `
[
  "cjs/index-node-current-cjs-wrapper.mjs",
  "// Bundled with Packemon: https://packemon.dev
// This is an MJS wrapper for a sibling CJS file

import data from './index-node-current-cjs.cjs';

export const { run, wait } = data;",
]
`;

exports[`Async/await swc transforms example test case: node-current-cjs 2`] = `
[
  "cjs/index-node-current-cjs.cjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: current, Format: cjs
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-current-cjs.cjs.map
",
]
`;

exports[`Async/await swc transforms example test case: node-current-lib 1`] = `
[
  "lib/index-node-current-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: current, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-current-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: node-current-mjs 1`] = `
[
  "mjs/index-node-current-mjs.mjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: current, Format: mjs
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-node-current-mjs.mjs.map
",
]
`;

exports[`Async/await swc transforms example test case: node-experimental-cjs 1`] = `
[
  "cjs/index-node-experimental-cjs-wrapper.mjs",
  "// Bundled with Packemon: https://packemon.dev
// This is an MJS wrapper for a sibling CJS file

import data from './index-node-experimental-cjs.cjs';

export const { run, wait } = data;",
]
`;

exports[`Async/await swc transforms example test case: node-experimental-cjs 2`] = `
[
  "cjs/index-node-experimental-cjs.cjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: experimental, Format: cjs
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-experimental-cjs.cjs.map
",
]
`;

exports[`Async/await swc transforms example test case: node-experimental-lib 1`] = `
[
  "lib/index-node-experimental-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: experimental, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-experimental-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: node-experimental-mjs 1`] = `
[
  "mjs/index-node-experimental-mjs.mjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: experimental, Format: mjs
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-node-experimental-mjs.mjs.map
",
]
`;

exports[`Async/await swc transforms example test case: node-legacy-cjs 1`] = `
[
  "cjs/index-node-legacy-cjs-wrapper.mjs",
  "// Bundled with Packemon: https://packemon.dev
// This is an MJS wrapper for a sibling CJS file

import data from './index-node-legacy-cjs.cjs';

export const { run, wait } = data;",
]
`;

exports[`Async/await swc transforms example test case: node-legacy-cjs 2`] = `
[
  "cjs/index-node-legacy-cjs.cjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: legacy, Format: cjs
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-legacy-cjs.cjs.map
",
]
`;

exports[`Async/await swc transforms example test case: node-legacy-lib 1`] = `
[
  "lib/index-node-legacy-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: legacy, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-legacy-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: node-legacy-mjs 1`] = `
[
  "mjs/index-node-legacy-mjs.mjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: legacy, Format: mjs
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-node-legacy-mjs.mjs.map
",
]
`;

exports[`Async/await swc transforms example test case: node-stable-cjs 1`] = `
[
  "cjs/index-node-stable-cjs-wrapper.mjs",
  "// Bundled with Packemon: https://packemon.dev
// This is an MJS wrapper for a sibling CJS file

import data from './index-node-stable-cjs.cjs';

export const { run, wait } = data;",
]
`;

exports[`Async/await swc transforms example test case: node-stable-cjs 2`] = `
[
  "cjs/index-node-stable-cjs.cjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: stable, Format: cjs
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-stable-cjs.cjs.map
",
]
`;

exports[`Async/await swc transforms example test case: node-stable-lib 1`] = `
[
  "lib/index-node-stable-lib.js",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: stable, Format: lib
"use strict";
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
exports.run = run;
exports.wait = wait;
//# sourceMappingURL=index-node-stable-lib.js.map
",
]
`;

exports[`Async/await swc transforms example test case: node-stable-mjs 1`] = `
[
  "mjs/index-node-stable-mjs.mjs",
  "// Bundled with Packemon: https://packemon.dev
// Platform: node, Support: stable, Format: mjs
async function wait() {
    return new Promise((resolve)=>{
        setTimeout(resolve, 100);
    });
}
async function run() {
    try {
        await wait();
    } catch  {
        throw new Error("Fail");
    }
}
export { run, wait };
//# sourceMappingURL=index-node-stable-mjs.mjs.map
",
]
`;
