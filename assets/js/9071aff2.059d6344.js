"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[78],{5318:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return u}});var a=t(7378);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),d=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=d(e.components);return a.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=d(t),u=i,k=m["".concat(p,".").concat(u)]||m[u]||c[u]||r;return t?a.createElement(k,l(l({ref:n},s),{},{components:t})):a.createElement(k,l({ref:n},s))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,l=new Array(r);l[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var d=2;d<r;d++)l[d]=t[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5517:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return c}});var a=t(5773),i=t(808),r=(t(7378),t(5318)),l=["components"],o={title:"Validate",sidebar_label:"validate"},p=void 0,d={unversionedId:"validate",id:"validate",title:"Validate",description:"Before a package can be published, there are many requirements that should be checked and validated.",source:"@site/docs/validate.md",sourceDirName:".",slug:"/validate",permalink:"/docs/validate",draft:!1,editUrl:"https://github.com/milesj/packemon/edit/master/website/docs/validate.md",tags:[],version:"current",frontMatter:{title:"Validate",sidebar_label:"validate"},sidebar:"docs",previous:{title:"scaffold",permalink:"/docs/scaffold"},next:{title:"watch",permalink:"/docs/watch"}},s={},c=[{value:"Options",id:"options",level:2}],m={toc:c};function u(e){var n=e.components,t=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Before a package can be published, there are many requirements that should be checked and validated.\nDoes the package have a valid entry point? Does it have a license? Is the ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," configured\ncorrectly? So on and so forth."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"validate")," command does just that and can be used to validate an array of options as a thorough\npre-publish step. It accomplishes this by inspecting each package's ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json")," and\n",(0,r.kt)("a",{parentName:"p",href:"/docs/build"},"build artifacts"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n    "scripts": {\n        "validate": "packemon validate"\n    }\n}\n')),(0,r.kt)("p",null,"Any errors found within the validation process will cause a non-zero exit code, while warnings only,\nor no warnings or errors would cause a zero exit code."),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("p",null,"Validate supports the following command line options."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--deps")," - Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"dependencies"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"peerDependencies"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"devDependencies")," are valid by:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Requiring peer deps to have version satisfying dev deps."),(0,r.kt)("li",{parentName:"ul"},"Disallowing peer and prod deps of the same package."),(0,r.kt)("li",{parentName:"ul"},"Disallowing ",(0,r.kt)("inlineCode",{parentName:"li"},"file:")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"link:")," versions."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--engines")," - Check that the current ",(0,r.kt)("inlineCode",{parentName:"li"},"node"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"npm"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"yarn")," runtimes (on your host machine)\nsatisfy the configured ",(0,r.kt)("inlineCode",{parentName:"li"},"engines")," constraint."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--entries")," - Check the ",(0,r.kt)("inlineCode",{parentName:"li"},"main"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"module"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"browser"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"types"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"typings"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"bin"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"man")," entry\npoints are valid by:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Requiring either ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"exports")," to be configured."),(0,r.kt)("li",{parentName:"ul"},"Verifying the relative path exists on the file system."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--files")," - Check that distributable files are not being accidentally ignored."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--license")," - Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"license")," is a valid SPDX license and a ",(0,r.kt)("inlineCode",{parentName:"li"},"LICENSE")," (or ",(0,r.kt)("inlineCode",{parentName:"li"},"LICENSE.md"),") file\nexists."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--links")," - Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"homepage")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"bugs")," links are valid URLs."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--meta")," - Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"name"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"version"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"description"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"keywords")," are valid."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--people")," - Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"author")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"contributors")," contain a name and optional but valid URL."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--repo")," - Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"repository")," exists and is a valid URL."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--skipPrivate")," - Skip ",(0,r.kt)("inlineCode",{parentName:"li"},"private")," packages from being packed.")),(0,r.kt)("p",null,"By default ",(0,r.kt)("em",{parentName:"p"},"all")," options are enabled, so you'd need to negate them with ",(0,r.kt)("inlineCode",{parentName:"p"},"--no-*")," to disable each one\n(this is not suggested)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"packemon validate --no-people\n")))}u.isMDXComponent=!0}}]);