"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[82],{5318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||a;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1011:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var r=n(5773),i=n(808),a=(n(7378),n(5318)),o=["components"],l={title:"build-workspace"},p=void 0,c={unversionedId:"build-workspace",id:"build-workspace",title:"build-workspace",description:"Like build, but when ran in the monorepo root, will build all packages in the",source:"@site/docs/build-workspace.mdx",sourceDirName:".",slug:"/build-workspace",permalink:"/docs/build-workspace",draft:!1,editUrl:"https://github.com/milesj/packemon/edit/master/website/docs/build-workspace.mdx",tags:[],version:"current",frontMatter:{title:"build-workspace"},sidebar:"docs",previous:{title:"build",permalink:"/docs/build"},next:{title:"clean",permalink:"/docs/clean"}},u={},s=[{value:"Options",id:"options",level:2}],d={toc:s};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Like ",(0,a.kt)("a",{parentName:"p",href:"./build"},(0,a.kt)("inlineCode",{parentName:"a"},"build")),", but when ran in the monorepo root, will build ",(0,a.kt)("em",{parentName:"p"},"all")," packages in the\nworkspace, as denoted by the ",(0,a.kt)("inlineCode",{parentName:"p"},"workspaces")," field in ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  "scripts": {\n    "build": "packemon build-workspace --addEngines"\n  }\n}\n')),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("p",null,"Supports all the same command line options as ",(0,a.kt)("a",{parentName:"p",href:"./build"},(0,a.kt)("inlineCode",{parentName:"a"},"build")),", with the addition of:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--filter")," - Filter packages to build based on their name in ",(0,a.kt)("inlineCode",{parentName:"li"},"package.json"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--formats"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"-f")," - Only generate specific output ",(0,a.kt)("inlineCode",{parentName:"li"},"format"),"s."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"--platforms"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"-p")," - Only target specific ",(0,a.kt)("inlineCode",{parentName:"li"},"platform"),"s.")))}m.isMDXComponent=!0}}]);