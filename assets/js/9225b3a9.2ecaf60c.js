"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[456],{3006:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var i=s(1948),r=s(3460);const l={title:"Package configuration"},t=void 0,o={id:"config",title:"Package configuration",description:"To configure a package, add a packemon block to their package.json, with any of the following",source:"@site/docs/config.md",sourceDirName:".",slug:"/config",permalink:"/docs/config",draft:!1,unlisted:!1,editUrl:"https://github.com/milesj/packemon/edit/master/website/docs/config.md",tags:[],version:"current",frontMatter:{title:"Package configuration"},sidebar:"docs",previous:{title:"Features & optimizations",permalink:"/docs/features"},next:{title:"Experimental swc support",permalink:"/docs/swc"}},d={},c=[{value:"Platforms",id:"platforms",level:2},{value:"Support",id:"support",level:2},{value:"Legend",id:"legend",level:3},{value:"Formats",id:"formats",level:2},{value:"Browser",id:"browser",level:3},{value:"Electron",id:"electron",level:3},{value:"Native",id:"native",level:3},{value:"Node",id:"node",level:3},{value:"Inputs",id:"inputs",level:2},{value:"Features",id:"features",level:2},{value:"Externals",id:"externals",level:2},{value:"API",id:"api",level:2},{value:"Bundle",id:"bundle",level:2},{value:"Namespace",id:"namespace",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["To configure a package, add a ",(0,i.jsx)(n.code,{children:"packemon"})," block to their ",(0,i.jsx)(n.code,{children:"package.json"}),", with any of the following\noptional options. We suggest defining a platform at minimum."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "name": "package",\n  "packemon": {\n    "platform": "node"\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["If you would like to support granular combinations of platforms, its formats, and supported\nenvironments, you may pass an array of options to ",(0,i.jsx)(n.code,{children:"packemon"}),". This is an advanced feature, so use\nwith caution."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "name": "package",\n  "packemon": [\n    {\n      "inputs": { "index": "src/index.ts" },\n      "platform": "node"\n    },\n    {\n      "inputs": { "web": "src/web.ts" },\n      "platform": "browser",\n      "support": "current"\n    },\n    {\n      "inputs": { "node": "src/node.mjs" },\n      "format": "mjs",\n      "platform": "node",\n      "support": "experimental"\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"platforms",children:"Platforms"}),"\n",(0,i.jsx)(n.p,{children:"The platform in which built code will be ran."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"browser"})," ",(0,i.jsx)(n.em,{children:"(default)"})," - Web browsers on desktop and mobile."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"electron"})," - Electron applications."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"native"})," - Native devices, primarily for React Native."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"node"})," - Node.js runtime."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "platform": "browser"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"To support multiple platforms, pass an array."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "platform": ["browser", "node"]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,i.jsx)(n.p,{children:"The supported environment and or version for the configured platform(s)."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"legacy"})," - An unsupported version. Only exists for legacy projects and systems."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"stable"})," ",(0,i.jsx)(n.em,{children:"(default)"})," - The oldest supported version, typically a version in LTS maintenance mode."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"current"})," - The current supported LTS version."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"experimental"})," - The newest version, typically not yet released for LTS. Is experimental or\nunstable."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "support": "current"\n}\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["We suggest leaving this setting at ",(0,i.jsx)(n.code,{children:"stable"})," for all libraries, as it offers the widest range of\nsupport for consumers."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"legend",children:"Legend"}),"\n",(0,i.jsx)(n.p,{children:"The supported environments above map to the following platform targets."}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{children:"Legacy"}),(0,i.jsx)(n.th,{children:"Stable"}),(0,i.jsx)(n.th,{children:"Current"}),(0,i.jsx)(n.th,{children:"Experimental"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Browser"}),(0,i.jsx)(n.td,{children:">= 0.10%, not IE 11"}),(0,i.jsx)(n.td,{children:"defaults, not IE 11"}),(0,i.jsx)(n.td,{children:">= 1%, not dead"}),(0,i.jsx)(n.td,{children:"last 2 chrome versions"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Electron"}),(0,i.jsx)(n.td,{children:">= 7.0.0"}),(0,i.jsx)(n.td,{children:">= 11.0.0"}),(0,i.jsx)(n.td,{children:">= 16.0.0"}),(0,i.jsx)(n.td,{children:">= 21.0.0"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Native"}),(0,i.jsx)(n.td,{children:">= iOS 13"}),(0,i.jsx)(n.td,{children:">= iOS 14"}),(0,i.jsx)(n.td,{children:">= iOS 15"}),(0,i.jsx)(n.td,{children:">= iOS 16"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Node"}),(0,i.jsx)(n.td,{children:">= 14.15.0"}),(0,i.jsx)(n.td,{children:">= 16.12.0"}),(0,i.jsx)(n.td,{children:">= 18.12.0"}),(0,i.jsx)(n.td,{children:">= 19.0.0"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"formats",children:"Formats"}),"\n",(0,i.jsx)(n.p,{children:"The output format for each platform build target. Each format will create a folder relative to the\nproject root that will house the built files."}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Packemon defaults to an ECMAScript format if available."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"browser",children:"Browser"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"lib"})," - ",(0,i.jsx)(n.a,{href:"https://nodejs.org/api/modules.html",children:"CommonJS"})," output using ",(0,i.jsx)(n.code,{children:".js"})," file extension. For\nstandard JavaScript and TypeScript projects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"esm"})," ",(0,i.jsx)(n.em,{children:"(default)"})," - ECMAScript module output using ",(0,i.jsx)(n.code,{children:".js"})," file extension. The same as ",(0,i.jsx)(n.code,{children:"lib"}),", but\nuses ",(0,i.jsx)(n.code,{children:"import/export"})," instead of ",(0,i.jsx)(n.code,{children:"require"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"umd"})," - Universal Module Definition output using ",(0,i.jsx)(n.code,{children:".js"})," file extension. Meant to be used directly\nin the browser (via CDN) instead of being bundled. Will be automatically enabled if\n",(0,i.jsx)(n.a,{href:"#namespace",children:"namespace"})," is provided and using default formats."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"electron",children:"Electron"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"lib"})," - ",(0,i.jsx)(n.a,{href:"https://nodejs.org/api/modules.html",children:"CommonJS"})," output using ",(0,i.jsx)(n.code,{children:".js"})," file extension. For\nstandard JavaScript and TypeScript projects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"esm"})," ",(0,i.jsx)(n.em,{children:"(default)"})," - ECMAScript module output using ",(0,i.jsx)(n.code,{children:".js"})," file extension. The same as ",(0,i.jsx)(n.code,{children:"lib"}),", but\nuses ",(0,i.jsx)(n.code,{children:"import/export"})," instead of ",(0,i.jsx)(n.code,{children:"require"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"native",children:"Native"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"lib"})," ",(0,i.jsx)(n.em,{children:"(default)"})," - ",(0,i.jsx)(n.a,{href:"https://nodejs.org/api/modules.html",children:"CommonJS"})," output using ",(0,i.jsx)(n.code,{children:".js"})," file\nextension. For standard JavaScript and TypeScript projects. ",(0,i.jsx)(n.em,{children:"This is the only format supported by\nReact Native and Metro."})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"node",children:"Node"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"lib"})," - ",(0,i.jsx)(n.a,{href:"https://nodejs.org/api/modules.html",children:"CommonJS"})," output using ",(0,i.jsx)(n.code,{children:".js"})," file extension. For\nstandard JavaScript and TypeScript projects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cjs"})," - ",(0,i.jsx)(n.a,{href:"https://nodejs.org/api/modules.html",children:"CommonJS"})," output using ",(0,i.jsx)(n.code,{children:".cjs"})," file extension. Source\nfiles must be written in CommonJS (",(0,i.jsx)(n.code,{children:".cjs"}),") and ",(0,i.jsx)(n.code,{children:"require"})," paths must use trailing extensions. ",(0,i.jsxs)(n.em,{children:["Will\nautomatically create ",(0,i.jsxs)(n.a,{href:"/docs/features#automatic-mjs-wrappers-for-cjs-inputs",children:[(0,i.jsx)(n.code,{children:".mjs"})," wrappers"]})," for\ninputs."]})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"mjs"})," ",(0,i.jsx)(n.em,{children:"(default)"})," - ",(0,i.jsx)(n.a,{href:"https://nodejs.org/api/esm.html",children:"ECMAScript module"})," output using ",(0,i.jsx)(n.code,{children:".mjs"})," file\nextension. Source files must be written in ESM (",(0,i.jsx)(n.code,{children:".mjs"}),") and ",(0,i.jsx)(n.code,{children:"import"})," paths must use trailing\nextensions."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "format": "lib"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"To support multiple formats, pass an array."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "format": ["lib", "esm"]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"inputs",children:"Inputs"}),"\n",(0,i.jsxs)(n.p,{children:["A mapping of entry points for the library (only when ",(0,i.jsx)(n.a,{href:"#bundle",children:"bundling"}),"), where the object key is\nthe name of the output file to be built (without extension), and the value is an input source file\nrelative to the package root."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "inputs": {\n    "index": "src/index.ts",\n    "client": "src/client/index.ts",\n    "server": "src/server.ts"\n  }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Defaults to ",(0,i.jsx)(n.code,{children:'{ "index": "src/index.ts" }'})," if not defined. If you're ",(0,i.jsx)(n.em,{children:"not"})," using TypeScript, you will\nneed to configure this."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["These inputs can be automatically mapped to ",(0,i.jsx)(n.code,{children:"package.json"})," ",(0,i.jsx)(n.code,{children:"exports"})," using the ",(0,i.jsx)(n.code,{children:"--addExports"})," CLI\noption. Do note that this feature is still experimental."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsx)(n.p,{children:"Feature flags can be enabled on a per-package basis, providing far more granular control, and\nproviding an opt-in mechanism for experimental features. The following features are available:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cjsTypesCompat"})," (",(0,i.jsx)(n.code,{children:"bool"}),") - When dual-building a package to both CJS and ESM outputs, this feature\nwill automatically rename ",(0,i.jsx)(n.code,{children:".d.ts"})," files to ",(0,i.jsx)(n.code,{children:".d.cts"})," for the ",(0,i.jsx)(n.code,{children:"cjs"})," format. This is a compatibility\nhack and may not work correctly, and ",(0,i.jsx)(n.em,{children:"should only"})," be used if source files are ",(0,i.jsx)(n.code,{children:".ts"})," and not\n",(0,i.jsx)(n.code,{children:".cts"}),". Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"helpers"})," (",(0,i.jsx)(n.code,{children:"string"}),") - How Babel/swc helpers should be handled when transpiling. Accepts ",(0,i.jsx)(n.code,{children:"bundled"}),"\n(default), ",(0,i.jsx)(n.code,{children:"external"}),", ",(0,i.jsx)(n.code,{children:"runtime"}),", or ",(0,i.jsx)(n.code,{children:"inline"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"swc"})," (",(0,i.jsx)(n.code,{children:"bool"}),") - Transpile source files with ",(0,i.jsx)(n.a,{href:"./swc",children:"swc"})," instead of Babel. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "features": {\n    "helpers": "runtime"\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"externals",children:"Externals"}),"\n",(0,i.jsxs)(n.p,{children:["By default, Packemon will denote all ",(0,i.jsx)(n.code,{children:"package.json"})," dependencies (peer, dev, and prod) as Rollup\nexternals. If you need to define custom externals (path aliases, etc), you can utilize the\n",(0,i.jsx)(n.code,{children:"externals"})," option, which accepts a string or an array of strings."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "externals": "some-module-name"\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Externals can also be provided as regex-strings that will be used with string ",(0,i.jsx)(n.code,{children:"match()"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "externals": ["@scope/\\\\*"]\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsxs)(n.p,{children:["Declares the type of import/export API this package is providing, either ",(0,i.jsx)(n.code,{children:"public"})," or ",(0,i.jsx)(n.code,{children:"private"}),". If\nnot provided, is ",(0,i.jsx)(n.code,{children:"public"})," for ",(0,i.jsx)(n.code,{children:"node"})," platform, but ",(0,i.jsx)(n.code,{children:"private"})," for all other platforms."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Public"})," - Allows deep imports, where the import path is a 1:1 to a file system path within the\npackage. When adding ",(0,i.jsx)(n.code,{children:"exports"}),", will use\n",(0,i.jsx)(n.a,{href:"https://nodejs.org/api/packages.html#subpath-patterns",children:"subpath export patterns"})," that will\nwildcard match any file in the output format."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Private"})," - Disallows deep imports, and ",(0,i.jsx)(n.em,{children:"only"})," allows index and ",(0,i.jsx)(n.a,{href:"#inputs",children:"inputs"})," imports. When\nusing ",(0,i.jsx)(n.code,{children:"exports"}),", inputs will use\n",(0,i.jsx)(n.a,{href:"https://nodejs.org/api/packages.html#subpath-exports",children:"subpath exports"})," that are relative from the\npackage index."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "api": "public"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"bundle",children:"Bundle"}),"\n",(0,i.jsxs)(n.p,{children:["Whether to bundle the source code into a single file for each ",(0,i.jsx)(n.a,{href:"#inputs",children:"input"}),". If not provided, is\n",(0,i.jsx)(n.code,{children:"false"})," for ",(0,i.jsx)(n.code,{children:"node"})," platform, but ",(0,i.jsx)(n.code,{children:"true"})," for all other platforms."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "bundle": false\n}\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Prefer the defaults as much as possible. The only time this setting should change is if the\npackage should allow deep imports. For example, a component library."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"namespace",children:"Namespace"}),"\n",(0,i.jsx)(n.p,{children:"For browsers only, this would be the name of the UMD global variable."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "namespace": "Packemon"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},3460:(e,n,s)=>{s.d(n,{I:()=>o,M:()=>t});var i=s(6952);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);