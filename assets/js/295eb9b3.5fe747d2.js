"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9096],{3834:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>a});var o=s(2540),c=s(3023);const r={title:"scaffold"},i=void 0,t={id:"scaffold",title:"scaffold",description:"The scaffold command is an interactive prompt that scaffolds a project or package from scratch. It",source:"@site/docs/scaffold.md",sourceDirName:".",slug:"/scaffold",permalink:"/docs/scaffold",draft:!1,unlisted:!1,editUrl:"https://github.com/milesj/packemon/edit/master/website/docs/scaffold.md",tags:[],version:"current",frontMatter:{title:"scaffold"},sidebar:"docs",previous:{title:"pack-workspace",permalink:"/docs/pack-workspace"},next:{title:"validate",permalink:"/docs/validate"}},l={},a=[{value:"Options",id:"options",level:2},{value:"Templates",id:"templates",level:2},{value:"<code>monorepo</code>",id:"monorepo",level:3},{value:"<code>monorepo-package</code>",id:"monorepo-package",level:3},{value:"<code>polyrepo-package</code>",id:"polyrepo-package",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"scaffold"})," command is an interactive prompt that scaffolds a project or package from scratch. It\ncreates all the necessary files, folders, and configurations for maintaining an npm package(s)."]}),"\n",(0,o.jsxs)(n.p,{children:["The command ",(0,o.jsx)(n.em,{children:"requires"})," a destination folder param to copy files to. The path is relative to the\ncurrent working directory."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"packemon scaffold .\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.p,{children:"Scaffold supports the following command line options."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--force"})," - Overwrite files that already exist (if running the same command multiple times)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--skipInstall"})," - Skip installation of npm dependencies. Defaults to ",(0,o.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--packageManager"})," - Package manager to install dependencies with. Defaults to ",(0,o.jsx)(n.code,{children:"yarn"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--packagesFolder"})," - Folder in which packages will be located (monorepo only). Defaults to\n",(0,o.jsx)(n.code,{children:"packages"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"--template"})," - Template to select by default."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"templates",children:"Templates"}),"\n",(0,o.jsx)(n.p,{children:"The following templates can be scaffolded."}),"\n",(0,o.jsx)(n.h3,{id:"monorepo",children:(0,o.jsx)(n.code,{children:"monorepo"})}),"\n",(0,o.jsx)(n.p,{children:"Structures a project to be a monorepo of many packages."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Creates config files for common developer tools (Babel, ESLint, Vitest, TypeScript, etc), based on\n",(0,o.jsx)(n.a,{href:"https://github.com/moonrepo/dev",children:"moonrepo presets"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Creates a ",(0,o.jsx)(n.code,{children:"packages"})," folder where all packages will exist. Create a package with the\n",(0,o.jsx)(n.code,{children:"monorepo-package"})," template."]}),"\n",(0,o.jsxs)(n.li,{children:["Configures ",(0,o.jsx)(n.code,{children:"package.json"})," with pre-defined scripts ",(0,o.jsx)(n.em,{children:"and"})," Yarn workspaces."]}),"\n",(0,o.jsxs)(n.li,{children:["Configures ",(0,o.jsx)(n.code,{children:"tsconfig.json"})," for type-checking ",(0,o.jsx)(n.em,{children:"and"})," project references."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"monorepo-package",children:(0,o.jsx)(n.code,{children:"monorepo-package"})}),"\n",(0,o.jsxs)(n.p,{children:["Creates an npm package within a monorepo's ",(0,o.jsx)(n.code,{children:"packages"})," folder. Requires ",(0,o.jsx)(n.code,{children:"monorepo"})," to be scaffolded\nfirst!"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Creates ",(0,o.jsx)(n.code,{children:"src"})," and ",(0,o.jsx)(n.code,{children:"tests"})," folders with example TypeScript files."]}),"\n",(0,o.jsxs)(n.li,{children:["Creates a ",(0,o.jsx)(n.code,{children:"package.json"})," with information gathered from the prompts."]}),"\n",(0,o.jsxs)(n.li,{children:["Configures package ",(0,o.jsx)(n.code,{children:"tsconfig.json"}),"s to use project references."]}),"\n",(0,o.jsxs)(n.li,{children:["Adds a reference to the root ",(0,o.jsx)(n.code,{children:"tsconfig.json"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"polyrepo-package",children:(0,o.jsx)(n.code,{children:"polyrepo-package"})}),"\n",(0,o.jsx)(n.p,{children:"Structures a project to be a polyrepo. Creates a single npm package within the current folder."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Creates config files for common developer tools (Babel, ESLint, Vitest, TypeScript, etc), based on\n",(0,o.jsx)(n.a,{href:"https://github.com/moonrepo/dev",children:"moonrepo presets"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Creates ",(0,o.jsx)(n.code,{children:"src"})," and ",(0,o.jsx)(n.code,{children:"tests"})," folders with example TypeScript files."]}),"\n",(0,o.jsxs)(n.li,{children:["Creates a ",(0,o.jsx)(n.code,{children:"package.json"})," with information gathered from the prompts."]}),"\n",(0,o.jsxs)(n.li,{children:["Configures ",(0,o.jsx)(n.code,{children:"package.json"})," with pre-defined scripts."]}),"\n",(0,o.jsxs)(n.li,{children:["Configures ",(0,o.jsx)(n.code,{children:"tsconfig.json"})," for type-checking."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},3023:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>t});var o=s(3696);const c={},r=o.createContext(c);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);